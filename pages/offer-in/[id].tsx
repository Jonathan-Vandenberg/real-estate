import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import { ParsedUrlQuery } from "querystring";
import { useEffect, useState } from "react";
import OfferInDetails from "../../components/offer-in/sales/OfferInDetails";
import OfferInForm from "../../components/offer-in/sales/OfferInForm";
import BankInspectionIcon from "../../components/svgs/BankInspectionIcon";
import ConveyancerIcon from "../../components/svgs/ConveyancerIcon";
import ECCIcon from "../../components/svgs/ECCIcon";
import FicaIcon from "../../components/svgs/FicaIcon";
import GasIcon from "../../components/svgs/GasIcon";
import IntermologistIcon from "../../components/svgs/IntermologistIcon";
import MortgageIcon from "../../components/svgs/MortgageIcon";
import OfferAcceptedIcon from "../../components/svgs/OfferAcceptedIcon";
import WaterIcon from "../../components/svgs/WaterIcon";
import prisma from "../../lib/prisma";
import { Document, OfferIn, Offer_In_Categories } from "../../types";
import Link from "next/link";
import ElectricFenceIcon from "../../components/svgs/ElectricFenceIcon";
import AlienSpeciesIcon from "../../components/svgs/AlienSpeciesIcon";
import cache from "../../lib/cache";

interface IOfferIn {
  offerIn: OfferIn;
  documents: Document[];
}

export default function Blog({ offerIn, documents }: IOfferIn) {
  const [showEdit, setShowEdit] = useState(false);
  const [isPortrait, setIsPortrait] = useState(true);

  useEffect(() => {
    const handleOrientationChange = () => {
      const mediaQuery = window.matchMedia("(orientation: portrait)");
      setIsPortrait(mediaQuery.matches);
    };

    window.addEventListener("orientationchange", handleOrientationChange);

    return () => {
      window.removeEventListener("orientationchange", handleOrientationChange);
    };
  }, []);

  let eccHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Eleccompcompany
    );
  });
  let eccHasFlag = offerIn?.elecCompCompany?.flag;

  let ficaHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed && todo?.offerInCategory === Offer_In_Categories.Ficadocs
    );
  });
  let ficaHasFlag = offerIn?.ficaDocs?.flag;

  let mortgageHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Mortgageoriginator
    );
  });
  let mortgageHasFlag = offerIn?.mortgageOriginator?.flag;

  let conveyancerHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Conveyancer
    );
  });
  let conveyancerHasFlag = offerIn?.conveyancer?.flag;

  let bankValHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Bankinspection
    );
  });
  let bankValHasFlag = offerIn?.bankInspection?.flag;

  let offerAcceptedHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Offeraccepted
    );
  });
  let offerAcceptedHasFlag = offerIn?.offerAccepted?.flag;

  let waterHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Watercert
    );
  });
  let waterHasFlag = offerIn?.waterCert?.flag;

  let gasHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Gascompliance
    );
  });
  let gasHasFlag = offerIn?.gasCompliance?.flag;

  let entomologistHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.Intermologist
    );
  });
  let entomologistHasFlag = offerIn?.intermologist?.flag;

  let electricFenceHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed &&
      todo?.offerInCategory === Offer_In_Categories.ElectricFence
    );
  });
  let electricFenceHasFlag = offerIn?.electricFence?.flag;

  let alienHasTodo = offerIn?.todos?.some(function (todo) {
    return (
      !todo?.completed && todo?.offerInCategory === Offer_In_Categories.Alien
    );
  });
  let alienHasFlag = offerIn?.alien?.flag;

  return (
    <div className="flex">
      <Head>
        <title>Landmark</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="border-r border-r-off-white md:border-none flex flex-col items-center p-3 md:items-start justify-between h-[calc(100vh_-_var(--navigation-height))] w-[5rem]  md:w-[18rem] sticky top-navigation-height bg-white">
        <div className="flex-1 xl:border-none md:pr-4">
          <ul className="pb-4 space-y-2 md:space-y-1 text-sm flex flex-col items-center justify-start md:items-start h-full">
            <li className=" hover:bg-off-white rounded-lg pl-[2px] w-full">
              <Link
                href="/admin"
                className="flex items-center p-2 space-x-3 rounded-md hover:cursor-pointer"
              >
                <a className="flex items-center p-2 space-x-3 rounded-md ">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 512 512"
                    className="w-5 h-5 fill-current dark:text-gray-400"
                  >
                    <path d="M469.666,216.45,271.078,33.749a34,34,0,0,0-47.062.98L41.373,217.373,32,226.745V496H208V328h96V496H480V225.958ZM248.038,56.771c.282,0,.108.061-.013.18C247.9,56.832,247.756,56.771,248.038,56.771ZM448,464H336V328a32,32,0,0,0-32-32H208a32,32,0,0,0-32,32V464H64V240L248.038,57.356c.013-.012.014-.023.024-.035L448,240Z"></path>
                  </svg>
                  <span className="hidden md:block ">Home</span>
                </a>
              </Link>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#ECC"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <ECCIcon className="w-6 h-6" />
                  {eccHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {eccHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">ECC</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#FICA"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="ml-[2px] relative">
                  <FicaIcon />
                  {ficaHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 -left-[2px]"></div>
                  )}
                  {ficaHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 -right-[2px]"></div>
                  )}
                </div>
                <span className="hidden md:block pl-[1px]">FICA</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#Mortgage"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <MortgageIcon />
                  {mortgageHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {mortgageHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 -right-[1px]"></div>
                  )}
                </div>
                <span className="hidden md:block">Mortgage</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                className="flex items-center p-2 space-x-3 rounded-md hover:cursor-pointer"
                href="#Conveyancer"
              >
                <div className="-ml-[5px] relative">
                  <ConveyancerIcon />
                  {conveyancerHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-[5px]"></div>
                  )}
                  {conveyancerHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Conveyancer</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#BankInspection"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <BankInspectionIcon />
                  {bankValHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {bankValHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block whitespace-nowrap">
                  Bank Valuation
                </span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#OfferAccepted"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <OfferAcceptedIcon />
                  {offerAcceptedHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {offerAcceptedHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block whitespace-nowrap">
                  Offer Accepted
                </span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#Water"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <WaterIcon />
                  {waterHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {waterHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Water</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#Gas"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <GasIcon />
                  {gasHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {gasHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Gas</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#Intermologist"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <IntermologistIcon />
                  {entomologistHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {entomologistHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Intermologist</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#ElectricFence"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <ElectricFenceIcon />
                  {electricFenceHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {electricFenceHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Electric Fence</span>
              </a>
            </li>
            <li className="rounded-lg hover:bg-off-white w-full">
              <a
                rel="noopener noreferrer"
                href="#Alien"
                className="flex items-center p-2 space-x-3 rounded-md "
              >
                <div className="relative">
                  <AlienSpeciesIcon className="w-6 h-6" />
                  {alienHasTodo && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(255,142,66)] absolute top-0 left-0"></div>
                  )}
                  {alienHasFlag && (
                    <div className="w-[0.6rem] h-[0.6rem] rounded-full bg-[rgb(222,0,0)] animate-blink absolute top-0 right-0"></div>
                  )}
                </div>
                <span className="hidden md:block">Alien Species</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
      {showEdit ? (
        <div className="md:max-w-[100rem] mx-auto w-full">
          <OfferInForm
            offerIn={offerIn}
            add={false}
            edit={true}
            onClick={() => setShowEdit(!showEdit)}
            propertyId={offerIn.propertyId}
            documents={documents}
          />
        </div>
      ) : (
        <OfferInDetails
          onClick={() => setShowEdit(!showEdit)}
          offerIn={offerIn}
        />
      )}
    </div>
  );
}

export const getStaticPaths: GetStaticPaths = async () => {
  const offerIn = await prisma.offerIn.findMany();
  const paths = offerIn?.map((item) => {
    return {
      params: { id: item.propertyId },
    };
  });
  return { paths, fallback: false };
};

interface IParams extends ParsedUrlQuery {
  id: string;
}

export const getStaticProps: GetStaticProps = async (context) => {
  const params = context.params as IParams;

  const documentsFetcher = async () => {
    let documents = await prisma.document.findMany();
    return documents;
  };

  const offerInFetcher = async () => {
    let offerIn = await prisma.offerIn.findUnique({
      where: {
        propertyId: params!.id,
      },
      include: {
        ficaDocs: true,
        mortgageOriginator: true,
        conveyancer: true,
        bankInspection: true,
        offerAccepted: true,
        waterCert: true,
        gasCompliance: true,
        intermologist: true,
        elecCompCompany: true,
        electricFence: true,
        alien: true,
        todos: true,
      },
    });

    let datyfiedOfferIn = await JSON.parse(JSON.stringify(offerIn));

    console.log(new Date());

    return datyfiedOfferIn;
  };

  const cachedOfferIn = await cache.fetch(
    "offerIn",
    offerInFetcher,
    60 * 60 * 24
  );
  const cachedDocuments = await cache.fetch(
    "documents",
    documentsFetcher,
    60 * 60
  );

  return {
    props: {
      documents: cachedDocuments,
      offerIn: cachedOfferIn,
    },
    revalidate: 10,
  };
};
