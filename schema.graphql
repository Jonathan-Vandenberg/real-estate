scalar Date
scalar Time
scalar DateTime

type Query {
  form(id: ID!): Form
  allForms: [Form]

  blogPosts: [BlogPost]
  blogPost(id: ID!): BlogPost
  blogCard: [BlogPost]

  property(id: ID!): Property
  allProperties: [Property]

  allImages: [Image]
  image(id: ID!): Image

  allDocuments: [Document]
  document(id: ID!): Document

  allResidentialFeatures: [ResidentialFeatures]
  allCommercialFeatures: [CommercialFeatures]

  agent(email: String!): Agent
  allAgents: [Agent]
}

type Mutation {
  addForm(input: FormInput!): Form

  addBlogPost(input: BlogPostInput!): BlogPost
  updateBlogPost(input: BlogPostInput!): BlogPost

  addAgent(input: AgentInput): Agent

  addProperty(input: PropertyInput!): Property
  updateProperty(input: PropertyInput!): Property

  addImage(input: ImageInput!): Image
  deleteImage(id: ID!): Image
  updateImage(id: ID!, input: ImageInput!): Image

  addDocument(input: DocumentInput!): Document
  deleteDocument(id: ID!): Document
  updateDocument(id: ID!, input: DocumentInput!): Document

  addOfferIn(input: OfferInInput!): OfferIn

  updateOfferIn(input: OfferInInput!): UpdateOfferInResponse
}

type UpdateOfferInResponse {
  offerIn: OfferIn
  elecCompCompany: ElecCompCompany
  ficaDocs: FicaDocs
  mortgageOriginator: MortgageOriginator
  conveyancer: Conveyancer
  bankInspection: BankInspection
  offerAccepted: OfferAccepted
  waterCert: WaterCert
  gasCompliance: GasCompliance
  intermologist: Intermologist
}

type Account {
  id: ID!
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
}

type Agent {
  id: ID!
  userId: ID!
  firstName: String
  lastName: String
  email: String
  password: String
  createdAt: String
  updatedAt: String
  address: String
  phoneNumber: String
  aboutMe: String
  profileImage: String
  properties: [Property]
  roles: Roles
}

input AgentInput {
  userId: ID!
  firstName: String
  lastName: String
  email: String
  password: String
  createdAt: String
  updatedAt: String
  address: String
  phoneNumber: String
  aboutMe: String
  profileImage: String
  roles: Roles
  properties: [PropertyInput]
}

type Form {
  id: ID!
  name: String!
  email: String!
  message: String!
}

input FormInput {
  name: String!
  email: String!
  message: String!
}

type BlogPost {
  id: ID!
  title: String
  subtitle1: String
  tableContents1: String
  tableContents2: String
  tableContents3: String
  tableContents4: String
  p1: String
  p2: String
  p3: String
  subtitle2: String
  p4: String
  p5: String
  l1: String
  l2: String
  l3: String
  l4: String
  l5: String
  subtitle3: String
  p6: String
  p7: String
  l6: String
  l7: String
  l8: String
  l9: String
  l10: String
  l11: String
  l12: String
  l13: String
  l14: String
  l15: String
  p8: String
  subtitle4: String
  conclusion1: String
  conclusion2: String
  conclusion3: String
  reference1: String
  reference2: String
  authorName: String
  authorAbout: String
  authorLink: String
  editedBy: String
  photoCredit: String
  mainImage: String
  publishedDate: String
}

input BlogPostInput {
  id: ID!
  title: String
  subtitle1: String
  tableContents1: String
  tableContents2: String
  tableContents3: String
  tableContents4: String
  p1: String
  p2: String
  p3: String
  subtitle2: String
  p4: String
  p5: String
  l1: String
  l2: String
  l3: String
  l4: String
  l5: String
  subtitle3: String
  p6: String
  p7: String
  l6: String
  l7: String
  l8: String
  l9: String
  l10: String
  l11: String
  l12: String
  l13: String
  l14: String
  l15: String
  p8: String
  subtitle4: String
  conclusion1: String
  conclusion2: String
  conclusion3: String
  reference1: String
  reference2: String
  authorName: String
  authorAbout: String
  authorLink: String
  editedBy: String
  photoCredit: String
  mainImage: String
  publishedDate: String
}

type Property {
  id: ID!
  agentId: ID!
  interior: String!
  featured: Boolean
  status: Status
  title: String!
  overview: String!
  address: String!
  price: String!
  yearBuilt: String!
  heating: String
  cooling: String
  parking: Int!
  lotSize: String!
  bedrooms: Int!
  bathrooms: Int!
  basement: String
  flooring: String!
  appliances: String
  otherPropertyFeatures: String
  otherInteriorFeatures: String
  schools: String
  distanceToNearestSchool: String
  shopping: String
  nightlife: String
  forKids: String
  surroundingSuburbs: String
  propertyCategory: Property_Category!
  residentialCategory: Residential_Category
  images: [Image]
  residentialFeatures: [ResidentialFeatures]
  offerIn: OfferIn
}

input PropertyInput {
  id: ID!
  agentId: ID!
  interior: String!
  featured: Boolean
  status: Status
  title: String!
  overview: String!
  address: String!
  price: String!
  yearBuilt: String!
  heating: String
  cooling: String
  parking: Int!
  lotSize: String!
  bedrooms: Int!
  bathrooms: Int!
  basement: String
  flooring: String!
  appliances: String
  otherPropertyFeatures: String
  otherInteriorFeatures: String
  schools: String
  distanceToNearestSchool: String
  shopping: String
  nightlife: String
  forKids: String
  surroundingSuburbs: String
  propertyCategory: Property_Category!
  residentialCategory: Residential_Category
}

type ResidentialFeatures {
  id: ID!
  propertyId: ID!
  residentialFeature: String
}

input ResidentialFeaturesInput {
  propertyId: ID!
  residentialFeature: String
}

type CommercialFeatures {
  id: ID!
  propertyId: ID!
  commercialFeature: String
}

input CommercialFeaturesInput {
  propertyId: ID!
  commercialFeature: String
}

type Image {
  id: ID!
  propertyId: ID!
  url: String
  imageCategory: Image_Category
}

input ImageInput {
  propertyId: ID!
  url: String
  imageCategory: Image_Category
}

enum Roles {
  CEO
  ADMIN
  AGENT
}

enum Status {
  FOR_RENT
  FOR_SALE
  SOLD
  OFFER_IN
}

enum Image_Category {
  PROPERTY
  MAIN
}

enum Property_Category {
  RESIDENTIAL
  COMMERCIAL
  INDUSTRIAL
  RAW_LAND
  SPECIAL_USE
  OFFICE
}

enum Residential_Category {
  FREE_STANDING
  DUPLEX
  SIMPLEX
  GRANNY_FLAT
  FLAT
  LUXURY
  CONDO
}

enum Offer_In_Categories {
  GENERAL
  ELECCOMPCOMPANY
  INTERMOLOGIST
  GASCOMPLIANCE
  WATERCERT
  OFFERACCEPTED
  BANKINSPECTION
  CONVEYANCER
  MORTGAGEORIGINATOR
  FICADOCS
}

enum Document_Category {
  COM_CERT
  MARRIAGE_LICENSE
  COP
  TAX_CERT
  MORTGAGE
  CONVEYANCER
  BANK_INSPECTION
  OFFER_ACCEPTED
  WATER_CERT
  GAS_COM_CERT
  INTERMOLOGIST
  ELECCOMPCOMPANY
  FICA_DOCUMENTS
}

type OfferIn {
  id: ID!
  propertyId: ID!
  elecCompCompanyId: ID!
  intermologistId: ID!
  gasComplianceId: ID!
  waterCertId: ID!
  offerAcceptedId: ID!
  bankInspectionId: ID!
  conveyancerId: ID!
  mortgageOriginatorId: ID!
  ficaDocsId: ID!
  amount: String
  dot: DateTime
  dateOfBondApplication: DateTime
  dateOfBondApprovalInPrincipal: DateTime
  dateOfBondApproved: DateTime
  bankName: String
  documents: [Document]
  elecCompCompany: ElecCompCompany
  intermologist: Intermologist
  gasCompliance: GasCompliance
  waterCert: WaterCert
  offerAccepted: OfferAccepted
  bankInspection: BankInspection
  conveyancer: Conveyancer
  mortgageOriginator: MortgageOriginator
  ficaDocs: FicaDocs
  flag: Boolean
  message: [AdminMessage]
}

input OfferInInput {
  id: ID!
  propertyId: ID!
  elecCompCompanyId: ID!
  intermologistId: ID!
  gasComplianceId: ID!
  waterCertId: ID!
  offerAcceptedId: ID!
  bankInspectionId: ID!
  conveyancerId: ID!
  mortgageOriginatorId: ID!
  ficaDocsId: ID!
  amount: String
  dot: DateTime
  documents: DocumentInput
  dateOfBondApplication: DateTime
  dateOfBondApprovalInPrincipal: DateTime
  dateOfBondApproved: DateTime
  bankName: String
  elecCompCompany: ElecCompCompanyInput
  intermologist: IntermologistInput
  gasCompliance: GasComplianceInput
  waterCert: WaterCertInput
  offerAccepted: OfferAcceptedInput
  bankInspection: BankInspectionInput
  conveyancer: ConveyancerInput
  mortgageOriginator: MortgageOriginatorInput
  ficaDocs: FicaDocsInput
  flag: Boolean
  message: [AdminMessageInput]
}

type ElecCompCompany {
  id: ID!
  offerInId: ID!
  name: String
  phone: String
  email: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input ElecCompCompanyInput {
  offerInId: ID!
  name: String
  phone: String
  email: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type Intermologist {
  id: ID!
  offerInId: ID!
  name: String
  phone: String
  email: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input IntermologistInput {
  offerInId: ID!
  name: String
  phone: String
  email: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type GasCompliance {
  id: ID!
  offerInId: ID!
  gasCompCerUrl: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input GasComplianceInput {
  offerInId: ID!
  gasCompCerUrl: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type WaterCert {
  id: ID!
  offerInId: ID!
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input WaterCertInput {
  offerInId: ID!
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type OfferAccepted {
  id: ID!
  offerInId: ID!
  withConditions: Boolean
  conditions: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input OfferAcceptedInput {
  offerInId: ID!
  withConditions: Boolean
  conditions: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type BankInspection {
  id: ID!
  offerInId: ID!
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input BankInspectionInput {
  offerInId: ID!
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type Conveyancer {
  id: ID!
  offerInId: ID!
  name: String
  phone: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input ConveyancerInput {
  offerInId: ID!
  name: String
  phone: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type MortgageOriginator {
  id: ID!
  offerInId: ID!
  phone: String
  name: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input MortgageOriginatorInput {
  offerInId: ID!
  phone: String
  name: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type FicaDocs {
  id: ID!
  offerInId: ID!
  address: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessage]
}

input FicaDocsInput {
  offerInId: ID!
  address: String
  notes: String
  completed: Boolean
  urgentAssistance: Boolean
  deadline: DateTime
  flag: Boolean
  message: [AdminMessageInput]
}

type Document {
  id: ID!
  offerInId: ID!
  url: String
  documentCategory: Document_Category
}

input DocumentInput {
  offerInId: ID!
  url: String
  documentCategory: Document_Category
}

type AdminMessage {
  id: ID!
  offerInId: ID!
  adminId: ID
  title: String
  message: String
  read: Boolean
  urgent: Boolean
  relatingTo: Offer_In_Categories
}

input AdminMessageInput {
  offerInId: ID!
  adminId: ID
  title: String
  message: String
  read: Boolean
  urgent: Boolean
  relatingTo: Offer_In_Categories
}
